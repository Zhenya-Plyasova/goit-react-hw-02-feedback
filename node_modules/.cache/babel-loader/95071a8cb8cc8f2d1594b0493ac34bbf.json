{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhenya\\\\js\\\\Homeworks\\\\react\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\feedback\\\\feedback.jsx\";\nimport { Component } from \"react\";\nimport css from './feedback.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.incrementButton = e => {\n      console.log(e.target.name);\n      this.setState(prevState => ({\n        [e.target.name]: prevState[e.target.name] + 1\n      }));\n      this.countTotalFeedback();\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n  }\n\n  countPositiveFeedbackPercentage() {\n    return;\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonsContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: \"good\",\n          onClick: this.incrementButton,\n          children: \"Good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: \"neutral\",\n          onClick: this.incrementButton,\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: \"bad\",\n          onClick: this.incrementButton,\n          children: \"Bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Good: \", good]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Neutral: \", neutral]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Bad: \", bad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Total: \", this.countTotalFeedback()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Positive feedback: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zhenya/js/Homeworks/react/goit-react-hw-02-feedback/src/components/feedback/feedback.jsx"],"names":["Component","css","Feedback","state","good","neutral","bad","incrementButton","e","console","log","target","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCG,KADsC,GAC9B;AACRC,MAAAA,IAAI,EAAE,CADE;AAERC,MAAAA,OAAO,EAAE,CAFD;AAGRC,MAAAA,GAAG,EAAE;AAHG,KAD8B;;AAAA,SAOpCC,eAPoC,GAOjBC,CAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,IAArB;AACA,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5B,SAACN,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBE,SAAS,CAACN,CAAC,CAACG,MAAF,CAASC,IAAV,CAAT,GAAyB;AADd,OAAhB,CAAd;AAGA,WAAKG,kBAAL;AACH,KAbmC;;AAAA,SAepCA,kBAfoC,GAejB,MAAI;AACnB,aAAQ,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAA1D;AACH,KAjBmC;AAAA;;AAmBpCU,EAAAA,+BAA+B,GAAG;AAC9B;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,wBACI;AAAA,8BACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,eAEJ;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAG,MAA7B;AAAoC,UAAA,OAAO,EAAE,KAAKI,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAG,SAA7B;AAAuC,UAAA,OAAO,EAAE,KAAKA,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAG,KAA7B;AAAmC,UAAA,OAAO,EAAE,KAAKA,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,eAOR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPQ,eAQJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACY;AAAA,kCACI;AAAA,iCAAWH,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,gCAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,kCAAY,KAAKS,kBAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,cARI;AAAA,oBADJ;AAmBL;;AA3CqC","sourcesContent":["import { Component } from \"react\";\r\nimport css from './feedback.module.css';\r\n\r\nexport class Feedback extends Component {\r\n  state = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n    }\r\n\r\n    incrementButton = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState((prevState) => ({\r\n          [e.target.name]: prevState[e.target.name]+1,\r\n        }));\r\n        this.countTotalFeedback();\r\n    }\r\n\r\n    countTotalFeedback=()=>{\r\n        return (this.state.good + this.state.neutral + this.state.bad)\r\n    }\r\n\r\n    countPositiveFeedbackPercentage() {\r\n        return \r\n    }\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        return (\r\n            <>\r\n    <h2>Please leave feedback</h2>            \r\n        <div className=\"buttonsContainer\">\r\n            <button type='button' name = 'good' onClick={this.incrementButton}>Good</button>\r\n            <button type='button' name = 'neutral' onClick={this.incrementButton}>Neutral</button>\r\n            <button type='button' name = 'bad' onClick={this.incrementButton}>Bad</button>\r\n                </div>\r\n    <h2>Statistics</h2>\r\n        <div className=\"Statistics\">\r\n                    <ul>\r\n                        <li>Good: {good}</li>\r\n                        <li>Neutral: {neutral}</li>\r\n                        <li>Bad: {bad}</li>\r\n                        <li>Total: {this.countTotalFeedback()}</li>\r\n                        <li>Positive feedback: { }</li>\r\n                    </ul>\r\n                </div>    \r\n        </>)   \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}