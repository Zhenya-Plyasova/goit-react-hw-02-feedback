{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhenya\\\\js\\\\Homeworks\\\\react\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\feedback\\\\Statistics\\\\Statistics.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Statistics extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      total: 0,\n      positivePercentage: 0\n    };\n\n    this.incrementButton = e => {\n      console.log(e.target.name);\n      this.setState(prevState => ({\n        [e.target.name]: prevState[e.target.name] + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return Math.round(this.state.good / this.countTotalFeedback() * 100);\n    };\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      className: \"Statistics\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Good: \", good]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Neutral: \", neutral]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Bad: \", bad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total: \", this.countTotalFeedback()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Positive feedback: \", this.countPositiveFeedbackPercentage(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zhenya/js/Homeworks/react/goit-react-hw-02-feedback/src/components/feedback/Statistics/Statistics.jsx"],"names":["React","Component","Statistics","state","good","neutral","bad","total","positivePercentage","incrementButton","e","console","log","target","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACxCE,KADwC,GAChC;AACRC,MAAAA,IAAI,EAAE,CADE;AAERC,MAAAA,OAAO,EAAE,CAFD;AAGRC,MAAAA,GAAG,EAAE,CAHG;AAIRC,MAAAA,KAAK,EAAE,CAJC;AAKRC,MAAAA,kBAAkB,EAAE;AALZ,KADgC;;AAAA,SAQtCC,eARsC,GAQnBC,CAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,IAArB;AACA,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5B,SAACN,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBE,SAAS,CAACN,CAAC,CAACG,MAAF,CAASC,IAAV,CAAT,GAAyB;AADd,OAAhB,CAAd;AAGA,WAAKG,kBAAL;AACA,WAAKC,+BAAL;AACH,KAfqC;;AAAA,SAiBtCD,kBAjBsC,GAiBnB,MAAI;AACnB,aAAQ,KAAKd,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAA1D;AACH,KAnBqC;;AAAA,SAqBtCY,+BArBsC,GAqBN,MAAI;AAChC,aAAOC,IAAI,CAACC,KAAL,CAAW,KAAKjB,KAAL,CAAWC,IAAX,GAAiB,KAAKa,kBAAL,EAAjB,GAA4C,GAAvD,CAAP;AACH,KAvBqC;AAAA;;AAyB1CI,EAAAA,MAAM,GAAE;AACJ;AAAA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACA;AAAA,gCACI;AAAA,+BAAWjB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,8BAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,gCAAY,KAAKW,kBAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,4CAAwB,KAAKC,+BAAL,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AASH;;AAnCyC","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Statistics extends Component {\r\n  state = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n    }\r\n    incrementButton = (e) => {\r\n        console.log(e.target.name);\r\n        this.setState((prevState) => ({\r\n          [e.target.name]: prevState[e.target.name]+1,\r\n        }));\r\n        this.countTotalFeedback();\r\n        this.countPositiveFeedbackPercentage();\r\n    }\r\n\r\n    countTotalFeedback=()=>{\r\n        return (this.state.good + this.state.neutral + this.state.bad)\r\n    }\r\n\r\n    countPositiveFeedbackPercentage=()=>{\r\n        return Math.round(this.state.good/(this.countTotalFeedback())*100)\r\n    }\r\n\r\nrender(){\r\n    <div className=\"Statistics\">\r\n    <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {this.countTotalFeedback()}</li>\r\n        <li>Positive feedback: {this.countPositiveFeedbackPercentage()}%</li>\r\n    </ul>\r\n</div>    \r\n}\r\n} "]},"metadata":{},"sourceType":"module"}